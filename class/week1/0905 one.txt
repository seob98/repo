1. 1) 2017180017 송용섭입니다.

2) 잘 다루지 못합니다. 컴퓨터를 자주 써서 익숙할 뿐이지, 코딩능력은 많이 부족합니다. (2점.)

3) C, C++ 과목 수강경험 있습니다. 다만 C++은 성적이 좋지 못했고, C는 친구들과 함께 스크립트 중심 게임 발만 담궈봤습니다. visual studio, linux 사용해 본 경험이 있습니다. 프로그래밍과 관련은 없다 생각하지만 3dmax도 한 학기 공부했습니다.

4) 첫날 온라인 수업에서 파이썬이 쉽고 직관적인 언어라고 소개하신 것에 좀 관심이 갔습니다. 프로그래밍은 여러가지 언어를 체험하고 그중 나에게 맞는 것을 찾는 것부터 시작이라고 하던데, 첫단계에서 배웠던 C와 C++은 번거로운 점이 많아 마냥 멀게만 느껴졌기 때문입니다. 수업 도중 조금이라도 프로그래밍이 가깝게 느껴졌으면 하는 바램입니다.

 

2. 객체지향에 대한 설명을 다룹니다. 용어부터 파고 들어가 oriented의 뜻말이 객체 위주라는 말로 풀어주어 좀 더 직관적인 이해가 되었습니다. 객체 지향을 이해하기 위한 키워드 5개를 소개합니다. 클래스, 오브젝트, 캡슐화, 상속성, 다형성. 허스키, 푸들처럼 실체를 가진 것은 오브젝트, 그 오브젝트를 개라는 하나의 특징을 제시하는 것을 클래스라고 합니다. 그 특징을 부여하는 것을 추상화라고 부릅니다. 캡슐화는 데이터와 데이터의 조작, 상속성은 클래스가 상속계층에 따라 그 특성을 공유받는 것, 클래스에 무관하게 동일한 명령을 사용하는것을 다형성이라고 할 수 있으며, 이 세 특성을 지원하는 것을 객체 지향이라고 부를 수 있습니다. 덧붙이자면 dog라는 기존 클래스가 있다면 sleddog은 dog의 특징을 물려받고 기존의 클래스와 구분되는 특징만을 기술해 파생됩니다. sleddog에서 또 samoyed가 파생된다면 dog와 sleddog 두 클래스의 특징을 고스란히 물려받습니다. 이와 같이 기존 클래스의 특징을 물려받는점을 재사용 혹은 유연성으로 부르기도 합니다. 객체지향에서 프로그램이란 오브젝트에 메세지를 보내어 객체와 객체간 상호작용의 관점을 제공합니다.

객체지향은 결국 프로그래밍 패러다임, 즉 관점을 뜻합니다. 가장 대표적인 패라다임으로 구조적인 프로그래밍과 객체지향 프로그램이 있는데 전자는 파스칼과 C, 후자는 자바와 C++이 해당됩니다.

최초의 객체지향 언어 simula67은 이름부터 드러나듯 시뮬레이션을 위해 만들어진 언어입니다. 현실 세계를 시뮬레이션 한다는 관점에서 객체지향 분석/설계가 진행되었습니다. 현실 세계의 묘사(추상화)로써의 class와 실체를 뜻하는 object가 바로 그 시작이라고 합니다. 그래서 객체지향을 프로그래밍 방법론으로 바라보기보다 설계/분석을 겸한 sw시스템으로 관점으로 바라보는것이 더 정확합니다. 구조적 프로그래밍이 기능과 절차에 중점을 둬 순차적인 알고리즘으로 1회성으로 데이터를 사용한다면, 객체지향은 객체와 객체간 역할과 관계에 주목합니다. 선택되고 식별화된 데이터들인 객체들을 서로 끊임없이 상호작용을 일으킵니다.

특징을 추상화하고 오브젝트에 적용시키는 과정을 배우들과 역활, 스크립트로 묘사한것이 굉장히 인상적이였습니다. 정확한 뜻을 모르고 프로그래밍의 방법 중 하나로만 막연하게 이해하고 있었으나 추상화라는 뜻을 정확히 짚어주어 현실 세계를 시뮬레이션 한다는 말이 좀 더 직관적으로 와닿는듯합니다. 선형대수학이나 물리학을 배울 때도 세상이치를 숫자나 공식등으로 바꾸어 그걸 그대로 현실에 적용시키는다는 글을 개요에서 자주 봤었는데 객체지향 또한 그 영역들과 본질이 크게 다르지 않다 느꼈습니다.

 

3. 1)cmd에서 파일의 접근, 생성, 삭제에 관한 명령어들을 소개하고 아주 간단한 예제들을 실행합니다.

mkdir(make directory) = 디렉토리 생성하기

cd (change directory) = 디렉토리 변경하기. 즉 원하는 디렉토리를 탐색(원하는 디렉터리에 이동)입니다.

pwd (print working directory) = 현재 자신이 바라보고 있는 디렉토리 표시.

delete = 해당 파일 삭제

move = 파일 이동시키기

copy = 파일 복사하기

exit = 종료

예제 newdirectory라는 이름의 디렉터리안에 test라는 이름의 디렉터리 만들기

>mkdir newdirectory

>cd newdirectory

>mkdir test

>dir

09/04/2020 09:37 PM <DIR>    test

 

이렇게 사용자의 이름, 파일접근, 파일생성, 파일삭제에 관한 예제를 다루었습니다.

2) 명령어들을 내손 내발처럼 쓰려면 어느 정도 명령어들을 사용하면서 시간을 들여야 할 것 같습니다.

어떤 운영체제를 쓰냐에 따라 명령어들이 조금씩 다릅니다. (linux는 rm window는 del등) 비슷하기에 오히려 혼동이 되어 더 유의해야 할 것 같습니다. (2점.)